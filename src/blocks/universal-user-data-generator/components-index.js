// Auto-generated by webpack - do not edit manually
export const availableComponents = {
  "chronotype-test": {
    "name": "Chronotype Test",
    "icon": "🌅",
    "description": "Test component for chronotype assessment",
    "category": "Assessment",
    "version": "1.0.0",
    "dataSchema": {
      "testResults": "object"
    },
    "userMetaKeys": {
      "chronotype_results": "sv_cb_ct_results"
    },
    "defaultConfig": {
      "showResults": true
    }
  },
  "daily-task-picker": {
    "name": "Daily Task Picker",
    "icon": "📅",
    "description": "Pick and schedule daily tasks from weekly list with energy flow context",
    "category": "Planning",
    "version": "1.0.0",
    "dataSchema": {
      "selectedDate": "string",
      "chronotypeData": "object"
    },
    "userMetaKeys": {
      "monthly_allocation": "monthly_time_allocation",
      "chronotype_data": "sv_cb_udg_chronotype"
    },
    "defaultConfig": {
      "showEnergyFlow": true,
      "autoSaveEnabled": true,
      "autoSaveDelay": 1000
    },
    "features": [
      "Date picker with weekly context",
      "Energy flow visualization",
      "Weekly task pills (uncompleted todos only)",
      "Unplanned task creation",
      "Debounced auto-save",
      "AI trigger functionality",
      "Lithuanian language support"
    ],
    "dependencies": [
      "EditableTable component",
      "Monthly time allocation data",
      "Chronotype data for energy flow"
    ]
  },
  "monthly-goals": {
    "name": "Monthly Goals",
    "icon": "🎯",
    "description": "Create and manage monthly goals based on quarterly objectives with time allocation",
    "category": "Planning",
    "version": "1.0.0",
    "dataSchema": {
      "selectedMonth": "string",
      "currentMonthGoals": "array",
      "workingHours": "number",
      "vacationDays": "number",
      "hoursPerDay": "number"
    },
    "userMetaKeys": {
      "goal_actions": "goal_actions",
      "monthly_goals": "monthly_goals",
      "tc_preferences": "tc_calculator_preferences",
      "routine_tasks": "routine_tasks",
      "goal_stages": "goal_stages"
    },
    "saveToMeta": {
      "monthly_goals": "monthly_goals",
      "tc_preferences": "tc_calculator_preferences"
    },
    "defaultConfig": {
      "monthSelectionMode": "limited",
      "showWorkingHours": true,
      "showQuarterlyContext": true,
      "autoCalculateAvailableTime": true
    },
    "features": [
      "Month selector with quarterly context",
      "Working hours calculator with vacation days",
      "Routine task time deduction",
      "Quarterly goals integration",
      "Editable goals table with save functionality",
      "Time availability validation"
    ],
    "dependencies": [
      "EditableTable component",
      "Working hours calculator utilities",
      "Quarterly goals data"
    ],
    "blockAbbr": "mg",
    "dataTypes": {
      "monthly_goals": "sv_cb_mg_monthly_goals",
      "tc_preferences": "sv_cb_mg_tc_preferences"
    }
  },
  "monthly-time-allocation": {
    "name": "Monthly Time Allocation",
    "icon": "📅",
    "description": "Plan and allocate time for routine tasks and goals across weeks",
    "category": "Planning",
    "version": "1.0.0",
    "dataSchema": {
      "selectedMonth": "string",
      "monthlyAllocation": "object"
    },
    "userMetaKeys": {
      "weekly_allocations": "monthly_time_allocation",
      "routine_tasks": "routine_tasks",
      "monthly_goals": "monthly_goals"
    },
    "defaultConfig": {
      "showRoutineTasks": true,
      "showMonthlyGoals": true
    }
  },
  "user-feedback-form": {
    "name": "User Feedback Form",
    "icon": "📝",
    "version": "1.0.0",
    "category": "Data Collection",
    "description": "Customizable form that saves user responses as JSON to user meta. Admin configures fields via Inspector Controls.",
    "features": [
      "Configurable form fields via JSON",
      "All data saves to single user meta key as JSON",
      "Merges with existing data (doesn't overwrite)",
      "Supports all FormRenderer field types",
      "Shows submitted data preview",
      "Resubmission capability"
    ],
    "dataSchema": {
      "formConfiguration": "object",
      "userMetaKey": "string"
    },
    "defaultConfig": {
      "title": "User Feedback Form",
      "submitButtonText": "Submit Feedback",
      "successMessage": "Thank you for your feedback!",
      "userMetaKey": "sv_cb_uff_feedback_data",
      "fieldsJson": "[{\"key\":\"satisfaction\",\"type\":\"select\",\"label\":\"Overall Satisfaction\",\"required\":true,\"options\":[{\"label\":\"Very Satisfied\",\"value\":\"5\"},{\"label\":\"Satisfied\",\"value\":\"4\"},{\"label\":\"Neutral\",\"value\":\"3\"},{\"label\":\"Dissatisfied\",\"value\":\"2\"},{\"label\":\"Very Dissatisfied\",\"value\":\"1\"}]},{\"key\":\"comments\",\"type\":\"textarea\",\"label\":\"Comments & Suggestions\",\"placeholder\":\"Please share your thoughts...\",\"required\":false,\"rows\":4}]"
    },
    "fieldTypes": [
      "text",
      "email",
      "number",
      "textarea",
      "select",
      "checkbox",
      "radio",
      "date"
    ],
    "dependencies": [
      "FormRenderer component",
      "Universal User Data Generator AJAX handlers"
    ]
  },
  "weekly-todo-list": {
    "name": "Weekly Todo Breakdown",
    "icon": "✅",
    "description": "Break down weekly tasks into actionable todo items with add/remove functionality",
    "category": "Planning",
    "version": "1.0.0",
    "dataSchema": {
      "selectedWeek": "string",
      "weeklyTodos": "object"
    },
    "userMetaKeys": {
      "monthly_allocation": "monthly_time_allocation",
      "weekly_todos": "weekly_todo_breakdown"
    },
    "defaultConfig": {
      "allowAddTodos": true,
      "allowRemoveTodos": true,
      "showCompletedTodos": true,
      "autoSaveEnabled": false
    },
    "features": [
      "Week selector (previous/current/next week)",
      "Display tasks from monthly time allocation as group headers",
      "Add/remove actionable todo items under each task",
      "Save detailed breakdown with todo structure",
      "Integration with existing monthly allocation data"
    ],
    "dependencies": [
      "EditableTable component",
      "Monthly time allocation data"
    ]
  }
};

// Dynamic imports for component files
export const loadComponent = async (componentName) => {
    try {
        const component = await import(`./components/${componentName}/component.js`);
        return component.default;
    } catch (error) {
        console.error(`Failed to load component ${componentName}:`, error);
        return null;
    }
};
