{"version":3,"file":"blocks/planner-personality-quiz/view.js","mappings":"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","sources":["webpack://sv-custom-blocks/./node_modules/react-dom/client.js","webpack://sv-custom-blocks/external window \"React\"","webpack://sv-custom-blocks/external window \"ReactDOM\"","webpack://sv-custom-blocks/external window \"ReactJSXRuntime\"","webpack://sv-custom-blocks/webpack/bootstrap","webpack://sv-custom-blocks/webpack/runtime/compat get default export","webpack://sv-custom-blocks/webpack/runtime/define property getters","webpack://sv-custom-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://sv-custom-blocks/webpack/runtime/make namespace object","webpack://sv-custom-blocks/./src/blocks/planner-personality-quiz/view.js"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","module.exports = window[\"React\"];","module.exports = window[\"ReactDOM\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Use this file for JavaScript code that you want to run in the front-end\n * on posts/pages that contain this block.\n *\n * When this file is defined as the value of the `viewScript` property\n * in `block.json` it will be enqueued on the front end of the site.\n *\n * Example:\n *\n * ```js\n * {\n *   \"viewScript\": \"file:./view.js\"\n * }\n * ```\n *\n * If you're not making any changes to this file because your project doesn't need any\n * JavaScript running in the front-end, then you should delete this file and remove\n * the `viewScript` property from `block.json`.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-metadata/#view-script\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { createRoot } from 'react-dom/client';\n\n\ndocument.addEventListener('DOMContentLoaded', function () {\n\n        renderForm();\n\n});\n\n\nfunction renderForm() {\n    const quizDiv = document.getElementById('planner-personality-type-quiz').getElementsByClassName('qa-container')[0];\n    const root = createRoot(quizDiv);\n    root.render(<QuizRender />);\n}\n\nfunction QuizRender() {\n\n    // const quizData = [\n    //     {\n    //         question: 'Kaip paprastai pradedi savo darbo dieną?',\n    //         answers: [\n    //             { text: 'Peržiūriu darbų sąrašą ir detaliai suplanuoju savo dieną.', letter: 'J' },\n    //             { text: 'Pradedu dirbti su tuo, kas iškyla, ir einu su srovėmis.', letter: 'P' },\n    //             { text: 'Ieškau naujų idėjų ir įkvėpimo, prieš pradedant užduotis.', letter: 'N' },\n    //             { text: 'Sutelkiu dėmesį į vieną konkrečią užduotį, kurią reikia atlikti pirmiausia.', letter: 'S' }\n    //         ]\n    //     },\n    //     {\n    //         question: 'Kaip reaguoji į netikėtus pokyčius savo tvarkaraštyje?',\n    //         answers: [\n    //             { text: 'Prisitaikau prie plano pakeitimų, bet man sunku keisti įprastą rutiną.', letter: 'J' },\n    //             { text: 'Sveikinu pokyčius ir lengvai prisitaikau, dažnai klestėdamas naujose situacijose.', letter: 'P' },\n    //             { text: 'Matau tai kaip galimybę tyrinėti naujas kryptis ir galimybes.', letter: 'N' },\n    //             { text: 'Stengiuosi kuo mažiau trikdyti planą ir išlaikyti kuo daugiau pirminio plano.', letter: 'S' }\n    //         ]\n    //     },\n    //     {\n    //         question: 'Kaip tau patinka dirbti su projektais?',\n    //         answers: [\n    //             { text: 'Mėgstu turėti aiškų, žingsnis po žingsnio planą ir griežtai jo laikytis.', letter: 'J' },\n    //             { text: 'Man patinka lankstumas ir prisitaikymas prie situacijos eigos.', letter: 'P' },\n    //             { text: 'Pradedu smegenų šturmu ir išbandau kelis metodus, prieš pasirinkdamas tinkamiausią.', letter: 'N' },\n    //             { text: 'Rimtuosi į praktinius metodus ir naudoju patikrintus procesus.', letter: 'S' }\n    //         ]\n    //     },\n    //     {\n    //         question: 'Kaip tvarkaisi su terminais?',\n    //         answers: [\n    //             { text: 'Planuoju iš anksto ir laikui dar nepraėjus atlikau užduotis.', letter: 'J' },\n    //             { text: 'Dažnai dirbu iki pat termino pabaigos, bet vis tiek atlieku kokybišką darbą.', letter: 'P' },\n    //             { text: 'Matau terminus kaip lankstus ir labiau susitelkiu į kūrybiškumą ir kokybę nei į griežtą laiką.', letter: 'N' },\n    //             { text: 'Naudoju terminus, kad paskirstyčiau laiką ir užtikrinčiau, kad užduotys būtų atliktos kruopščiai.', letter: 'S' }\n    //         ]\n    //     },\n    //     {\n    //         question: 'Kaip vertini komandinius darbus ir bendradarbiavimą?',\n    //         answers: [\n    //             { text: 'Mėgstu organizuoti ir paskirstyti užduotis, kad viskas būtų atlikta efektyviai.', letter: 'EJ' },\n    //             { text: 'Teikiu pirmenybę smegenų šturmui, kur kiekvienas gali laisvai prisidėti.', letter: 'EN' },\n    //             { text: 'Man labiausiai patinka dirbti savarankiškai, bet bendradarbiauju, kai reikia.', letter: 'IJ' },\n    //             { text: 'Geriausiai dirbu struktūrizuotoje komandoje, kur aiškiai apibrėžti vaidmenys ir atsakomybės.', letter: 'IS' }\n    //         ]\n    //     },\n    //     {\n    //         question: 'Kas tave motyvuoja atlikti užduotį?',\n    //         answers: [\n    //             { text: 'Pasiekti galutinį tikslą ir išbraukti jį iš sąrašo.', letter: 'J' },\n    //             { text: 'Galimybė atrasti naujų idėjų ir sprendimų.', letter: 'N' },\n    //             { text: 'Praktinė nauda ir apčiuopiami darbo rezultatai.', letter: 'S' },\n    //             { text: 'Galimybė prisitaikyti ir keisti planus, kai to reikia.', letter: 'P' }\n    //         ]\n    //     },\n    //     {\n    //         question: 'Kaip atsigauni po ilgos darbo dienos?',\n    //         answers: [\n    //             { text: 'Man patinka ramios, apmąstymo veiklos, kaip skaitymas ar meditacija.', letter: 'I' },\n    //             { text: 'Mėgstu bendrauti arba užsiimti aktyviais pomėgiais.', letter: 'E' },\n    //             { text: 'Mėgstu užsiimti kūrybine veikla arba atrasti naują hobį.', letter: 'N' },\n    //             { text: 'Man patinka įprasti, ramūs ritualai, kaip TV žiūrėjimas ar maisto gaminimas.', letter: 'S' }\n    //         ]\n    //     },\n    //     {\n    //         question: 'Kaip elgiesi su konfliktu komandos aplinkoje?',\n    //         answers: [\n    //             { text: 'Stengiuosi tarpininkauti ir rasti kompromisą.', letter: 'F' },\n    //             { text: 'Sprendžiu problemą tiesiogiai ir ieškau logiško sprendimo.', letter: 'T' },\n    //             { text: 'Stengiuosi vengti konflikto ir tikiuosi, kad jis išsispręs savaime.', letter: 'I' },\n    //             { text: 'Jaučiu nusivylimą, bet nekalbu, nebent tai tikrai būtina.', letter: 'S' }\n    //         ]\n    //     },\n    //     {\n    //         question: 'Kaip sprendi problemas?',\n    //         answers: [\n    //             { text: 'Surinkau visus faktus ir logiškai analizuoju, kad rasti sprendimą.', letter: 'T' },\n    //             { text: 'Pasitikiu savo intuicija ir ieškau modelių arba įžvalgų, kurios nėra akivaizdžios.', letter: 'N' },\n    //             { text: 'Atsižvelgiu į žmonių poreikius ir siekiu sprendimo, kuris tinka visiems.', letter: 'F' },\n    //             { text: 'Rimtuosi į patikrintus metodus, kurie veikė praeityje.', letter: 'S' }\n    //         ]\n    //     },\n    //     {\n    //         question: 'Kaip prioritetuoji užduotis?',\n    //         answers: [\n    //             { text: 'Nustatau prioritetus pagal terminus ir svarbą, laikydamasis griežto grafiko.', letter: 'J' },\n    //             { text: 'Dirbu su tuo, kas man tuo metu įdomiausia, ir keičiu prioritetus pagal poreikį.', letter: 'P' },\n    //             { text: 'Rinkiuosi užduotis, kurios dera su ilgalaike vizija ir tikslais.', letter: 'N' },\n    //             { text: 'Imuosi užduočių pagal jų tiesioginę praktinę naudą.', letter: 'S' }\n    //         ]\n    //     },\n    //     {\n    //         question: 'Kaip tau patinka komunikuoti savo idėjas?',\n    //         answers: [\n    //             { text: 'Mėgstu jas atvirai aptarti su grupe.', letter: 'E' },\n    //             { text: 'Labiau mėgstu apmąstyti ir pasidalinti raštu.', letter: 'I' }\n    //         ]\n    //     },\n    //     {\n    //         question: 'Kaip vertini projekto sėkmę?',\n    //         answers: [\n    //             { text: 'Pagal pasiektą efektyvumą ir rezultatus.', letter: 'T' },\n    //             { text: 'Pagal žmonių, dalyvavusių projekte, pasitenkinimą ir gerovę.', letter: 'F' }\n    //         ]\n    //     }\n    // ];\n\n    const quizData = [\n        {\n            question: '',\n            answers: [\n                { text: 'Geriausia, kai galiu dieną pradėti peržiūrėjus darbų sąrašą ir detaliai suplanavus darbotvarkę.', letter: 'J' },\n                { text: 'Pradedant ar jau vykdant projektą, man svarbu užtikrinti, kad rezultatai ir sprendimai atitiktų visų susijusių šalių poreikius.', letter: 'F' },\n                { text: 'Mane motyvuoja praktinė užduoties nauda ir apčiuopiami darbo rezultatai.', letter: 'S' },\n                { text: 'Kilus konfliktui darbe, problemą imuosi spręsti tiesiogiai ir visų pirma ieškau logiškiausio varianto.', letter: 'T' },\n                { text: 'Atėjus idėjai, man geriausia ją pirmiau apmąstyti vienumoje ir tuomet su kitais  pasidalinti raštu.', letter: 'I' }\n            ]\n        },\n        // {\n        //     question: '',\n        //     answers: [\n        //         { text: 'Kad išlaikyčiau motyvaciją, man svarbus lankstumas - galimybė prisitaikyti ir keisti planus, kai to reikia.', letter: 'P' },\n        //         { text: 'Iškilus konfliktui komandoje, stengiuosi tarpininkauti ir padėti rasti kompromisą.', letter: 'F' },\n        //         { text: 'Kai turiu daug darbo, labiausiai dėmesį sutelkiu į kylančias situacijas ir prioritetus nustatau pagal tai, kas tuo metu svarbiausia.', letter: 'T' },\n        //         { text: 'Man svarbu dirbant kiek įmanoma labiau laikytis pirminio plano.', letter: 'S' },\n        //         { text: 'Man kur kas svarbiau pasiekti aukštą kūrybiškumo lygį ir geriausią įmanomą rezultatą, nei griežtai laikytis nustatytų terminų.', letter: 'N' }\n        //     ]\n        // },\n        // {\n        //     question: '',\n        //     answers: [\n        //         { text: 'Kilus problemai, man geriausia neišradinėti dviračio ir naudoti patikrintus metodus, kurie veikė praeityje.', letter: 'S' },\n        //         { text: 'Darbe / komandoje konfliktų kilti neturėtų. Manau, kad kiekvienas turėtų išsispręsti savo problemas asmeniškai.', letter: 'I' },\n        //         { text: 'Džiaugiuosi, kai nenumatyti pasikeitimai planuose man atneša galimybę patyrinėti naujas kryptis ir galimybes.', letter: 'N' },\n        //         { text: 'Stengiuosi darbų nepradėti, kol neaptariu ir nesuderinu veiksmai su klientais / kolegomis.', letter: 'E' },\n        //         { text: 'Projekto sėkmę vertinu labiausiai pagal tai, kiek jis išpildo suinteresuotų šalių pasitenkinimą ir gerovę.', letter: 'F' }\n        //     ]\n        // },\n        // {\n        //     question: '',\n        //     answers: [\n        //         { text: 'Man geriausia dieną pradėti nuo naujausių užduočių / užklausų ir dirbant atsižvelgti į tolesnę įvykių eigą.', letter: 'P' },\n        //         { text: 'Mėgstu dalintis inovatyviomis idėjomis, kurios skatina kūrybiškumą ir naujas kryptis darbe.', letter: 'N' },\n        //         { text: 'Mėgstu bendrauti ir dalintis idėjomis su kitais komandos nariais.', letter: 'E' },\n        //         { text: 'Kai turiu pasirinkti, ką iš daugybės užduočių atlikti pirmiausiai, renkuosi pagal jų tiesioginę praktinę naudą.', letter: 'S' },\n        //         { text: 'Vertinu galimybę dirbti savarankiškai ir apgalvoti sprendimus ramioje aplinkoje.', letter: 'I' }\n        //     ]\n        // },\n        // {\n        //     question: '',\n        //     answers: [\n        //         { text: 'Kilus nenumatytai problemai mano įgyvendinamame projekte, pirmiausiai surenku visus faktus ir jais remiantis ieškau logiškiausio sprendimo.', letter: 'T' },\n        //         { text: 'Savo užduotis planuoju iš anksto ir jas užbaigiu dažnai dar gerokai prieš galutinį terminą.', letter: 'J' },\n        //         { text: 'Pasikeitimai darbotvarkėje ar planuose man ne trukdo, o padeda atrasti naujų galimybių!', letter: 'P' },\n        //         { text: 'Kilus konfliktinei situacijai darbe, svarbu visiems aktyviai ją aptarti ir išreikšti savo nuomonę.', letter: 'E' },\n        //         { text: 'Kai darbo daug, svarbu prioritetą teikti užduotims, kurios atitinka ilgalaikę viziją ir tikslus.', letter: 'N' },\n\n        //     ]\n        // },\n        // {\n        //     question: '',\n        //     answers: [\n        //         { text: 'Kilus nenumatytai problemai, nedelsiant ieškau greito ir efektyvaus sprendimo, kuris iš karto galėtų būti pritaikytas.', letter: 'P' },\n        //         { text: 'Labiau mėgstu dirbti savarankiškai ir pasidalinti rezultatais su komanda vėliau.', letter: 'I' },\n        //         { text: 'Man svarbu, kad dirbant komandoje visi galėtų laisvai dalintis idėjomis ir prisidėti prie bendro rezultato.', letter: 'N' },\n        //         { text: 'Geriausia motyvacija - pasiekti norimą tikslą ir užduotį išbraukti iš sąrašo.', letter: 'J' }, \n        //         { text: 'Geriausiai pailsiu, kai galiu pabendrauti arba užsiimti aktyviais pomėgiais.', letter: 'E' },\n\n        //     ]\n        // },\n        // {\n        //     question: '',\n        //     answers: [\n        //         { text: 'Svarbu dieną pradėti sutelkiant dėmesį į tą užduotį, kurią reikia atlikti pirmiausia.', letter: 'S' },\n        //         { text: 'Kalbant apie naujas idėjas darbe, svarbiau atsižvelgti į galimybę sklandžiai ir efektyviai jas pritaikyti, o ne į jų kūrybiškumą.', letter: 'T' },\n        //         { text: 'Projekto sėkmė tiesiogiai priklauso nuo to, kiek projekto įgyvendinimo metu gebama laikytis pirminio plano ir tvarkos.', letter: 'J' },\n        //         { text: 'Kilus problemai darbe, svarbu atsižvelgti  į komandos narių poreikius ir siekti sprendimo, kuris būtų priimtinas visiems.', letter: 'F' },\n        //         { text: 'Projekto sėkmę vertinu pagal tai, kaip lengvai jis buvo įgyvendintas ir kokių trukdžių buvo išvengta.', letter: 'P' }\n        //     ]\n        // },\n        // {\n        //     question: '',\n        //     answers: [\n        //         { text: 'Man motyvacijos stueikia žinojimas, kad mano darbas padeda kitiems ir prisideda prie bendros gerovės.', letter: 'F' },\n        //         { text: 'Po ilgos darbo dienos pailsėti man padeda rami veikla, tokia, kaip skaitymas ar meditacija.', letter: 'I' },\n        //         { text: 'Kilus naujoms idėjoms, geriausia jas atvirai aptarti su komanda / klientais.', letter: 'E' },\n        //         { text: 'Kai turiu padaryti daug, pirmiausiai nustatau prioritetus pagal terminus ir svarbą, ir griežtai laikausi sudaryto grafiko.', letter: 'J' },\n        //         { text: 'Projekto sėkmę geriausia vertinti pagal veiksmų efektyvumą ir pasiektus rezultatus.', letter: 'T' }\n        //     ]\n        // }\n    ];\n\n    const points = [\n        \"100% ne aš\",\n        \"Nepanašu į mane\",\n        \"Gaaaal kartais\",\n        \"Skamba panašiai\",\n        \"100% AŠ!\"\n    ];\n\n    const tieBreakerQuestions = [\n        {\n            question: 'Kai turi svarbią užduotį atlikti, kaip renkiesi spręsti problemas?',\n            answers: [\n                { text: 'Man patinka pasitarti su kolegomis ir kartu aptarti galimus sprendimus.', letter: 'E' },\n                { text: 'Mėgstu ramiai apmąstyti galimus sprendimus vienumoje, prieš pasidalinant su kitais.', letter: 'I' }\n            ]\n        },\n        {\n            question: 'Kaip planuoji ilgalaikį projektą?',\n            answers: [\n                { text: 'Labiau pasikliauju konkrečiais faktais, ankstesne patirtimi ir žingsnių planu.', letter: 'S' },\n                { text: 'Pradedu nuo vizijos kūrimo ir ieškau naujų galimybių bei kūrybiškų sprendimų.', letter: 'N' }\n            ]\n        },\n        {\n            question: 'Kaip priimi sprendimą dėl komandos nario veiklos?',\n            answers: [\n                { text: 'Vertinu pagal objektyvius rezultatus ir veiklos efektyvumą.', letter: 'T' },\n                { text: 'Atsižvelgiu į komandos nario pastangas ir kaip tai paveiks jo motyvaciją bei jausmus.', letter: 'F' }\n            ]\n        },\n        {\n            question: 'Kaip tvarkaisi su pasikeitimais projekte?',\n            answers: [\n                { text: 'Stengiuosi laikytis pirminio plano ir kiek įmanoma išvengti pakeitimų.', letter: 'J' },\n                { text: 'Lengvai prisitaikau prie pakeitimų ir dažnai randu naujų būdų veiksmingai išspręsti situacijas.', letter: 'P' }\n            ]\n        }\n    ];\n\n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [currentVariant, setCurrentVariant] = useState(0);\n    const [selectedAnswers, setSelectedAnswers] = useState({\n        'E': [0, 0],\n        'I': [0, 0],\n        'S': [0, 0],\n        'N': [0, 0],\n        'T': [0, 0],\n        'F': [0, 0],\n        'J': [0, 0],\n        'P': [0, 0]\n    }); // To track selected answers for each question\n\n    const [dichotomy, setDichotomy] = useState([\n        '',\n        '',\n        '',\n        ''\n    ]);\n    const [tieBreak, setTieBreak] = useState([]);\n    const [currentTieBreakQuestion, setCurrentTieBreakQuestion] = useState(0);\n    const [showResultContainer, setShowResultContainer] = useState(false);\n    \n    const handleChange = (answerLetter, points, variantIndex) => {\n        setSelectedAnswers((prevAnswers) => {\n            const [sum] = prevAnswers[answerLetter]; // Destructure the sum from the array\n            return {\n                ...prevAnswers,\n                [answerLetter]: [sum, points] // Update only passedNumber, keep sum unchanged\n            };\n        });\n        setCurrentVariant((prevVariant) => \n            variantIndex < currentVariant ? currentVariant : (prevVariant + 1) >= quizData[currentQuestion].answers.length ? currentVariant : prevVariant + 1\n        );\n\n        // const element = document.getElementById(`variant-${answerLetter}`);\n        //     if (element) {\n        //     element.scrollIntoView( true, {\n        //         behavior: 'smooth',\n        //         block: 'center',\n        //     });\n        //     }\n\n    };\n\n    const tieBreakChange = (questionIndex, answerLetter) => {\n        setDichotomy((prevDichotomy) => {\n          // Create a copy of the array\n          const updatedDichotomy = [...prevDichotomy];\n          \n          // Update the specific index with the new value\n          updatedDichotomy[questionIndex] = answerLetter;\n          \n          // Return the updated array\n          return updatedDichotomy;\n        });\n        setCurrentTieBreakQuestion(currentTieBreakQuestion + 1);\n    };\n\n    // // Function to move to the next question\n    // const handleNextQuestion = () => {\n    //     setSelectedAnswers((prevAnswers) => {\n    //     const updatedAnswers = { ...prevAnswers };\n        \n    //         // Iterate over each letter and update the sums\n    //         Object.keys(updatedAnswers).forEach((letter) => {\n    //             updatedAnswers[letter][0] += updatedAnswers[letter][1]; // Add current points to the sum\n    //             updatedAnswers[letter][1] = 0; // Reset current points to 0 for the next question\n    //         });\n        \n    //     return updatedAnswers;\n    //     });\n        \n    //     if (currentQuestion < quizData.length - 1) {\n    //         setCurrentQuestion(currentQuestion + 1);\n    //         setCurrentVariant(0);\n    //         const element = document.getElementsByClassName('variant active')[0];\n    //         if (element) {\n    //         element.scrollIntoView( true, {\n    //             behavior: 'smooth',\n    //             block: 'center',\n    //         });\n    //         }\n\n    //     } else {\n    //         setCurrentQuestion(currentQuestion + 1);\n    //         setCurrentVariant(0);\n    //         const pairs = [\n    //             { key1: 'E', key2: 'I', index: 0 },\n    //             { key1: 'S', key2: 'N', index: 1 },\n    //             { key1: 'T', key2: 'F', index: 2 },\n    //             { key1: 'J', key2: 'P', index: 3 }\n    //           ];\n\n    //           pairs.forEach(({ key1, key2, index }) => {\n\n\n    //           if (selectedAnswers[key1][0] === selectedAnswers[key2][0]) {\n    //             setTieBreak((prevTieBreak) => [ ...prevTieBreak, index]);\n\n    //           }\n\n    //           });\n\n             \n\n    //         // Handle end of quiz logic, maybe show results or reset the quiz\n\n    //     }\n    // };\n\n    const activeElementRef = useRef(null);\n\n    useEffect(() => {\n        if (activeElementRef.current) {\n            activeElementRef.current.scrollIntoView({\n                behavior: 'smooth',\n                block: 'start', \n            });\n        }\n    }, [tieBreak, currentVariant, currentQuestion, currentTieBreakQuestion]);\n\n\n    // Function to move to the next question\n    const handleNextQuestion = () => {\n        setSelectedAnswers((prevAnswers) => {\n            const updatedAnswers = { ...prevAnswers };\n\n            // Iterate over each letter and update the sums\n            Object.keys(updatedAnswers).forEach((letter) => {\n                updatedAnswers[letter][0] += updatedAnswers[letter][1]; // Add current points to the sum\n                updatedAnswers[letter][1] = 0; // Reset current points to 0 for the next question\n            });\n\n            // Tie-breaker logic\n            if (currentQuestion === quizData.length - 1) {\n                const pairs = [\n                    { key1: 'E', key2: 'I', index: 0 },\n                    { key1: 'S', key2: 'N', index: 1 },\n                    { key1: 'T', key2: 'F', index: 2 },\n                    { key1: 'J', key2: 'P', index: 3 }\n                ];\n\n                pairs.forEach(({ key1, key2, index }) => {\n                    if (updatedAnswers[key1][0] === updatedAnswers[key2][0]) {\n                        setTieBreak((prevTieBreak) => [...prevTieBreak, index]);\n                    } else {\n                        \n                        setDichotomy((prevDichotomy) => {\n                            const updatedDichotomy = prevDichotomy;\n                            updatedDichotomy[index] = updatedAnswers[key1][0] > updatedAnswers[key2][0] ? key1 : key2;\n\n                            return updatedDichotomy;\n                        })\n                    }\n                });\n            }\n\n            return updatedAnswers;\n        });\n        setCurrentQuestion(currentQuestion + 1);\n        setCurrentVariant(0);\n\n        if (currentQuestion === quizData.length - 1) {\n            console.log('end of quiz');\n            console.log(currentTieBreakQuestion);\n            \n            // Handle end of quiz logic, maybe show results or reset the quiz\n            // \n        }\n    };\n\n    const showResult = () => {\n        //show partial result\n\n        setTieBreak([]);\n        setShowResultContainer(!showResultContainer);\n        \n\n    };\n\n    const sendEmail = () => {\n\n        //ajax with dichotomy and email users\n\n    };\n\n\n    return (\n\n        \n        <>\n\n            {quizData[currentQuestion] && quizData[currentQuestion].answers.map((answer, answerIndex) => (\n                <div className={`variant ${currentVariant !== answerIndex ? 'inactive' : 'active'}`} id={`variant-${answer.letter}`} ref={currentVariant !== answerIndex ? activeElementRef : null}>\n                <p style={{ textAlign: 'center' }} data-dichotomy={answer.letter}>\n                    {answer.text}\n                </p>\n                <div className=\"choice-slider\">\n                    {points.map((point, pointIndex) => {\n                        const points = pointIndex + 1;\n\n                         return (<>\n                            <input\n                                type=\"radio\"\n                                className=\"choice-input\"\n                                name={`points-${answer.letter}`}\n                                id={`points-${answer.letter}-${points}`}\n                                value={points}\n                                onChange={() => handleChange(answer.letter, points, answerIndex)}\n                                checked={selectedAnswers[answer.letter][1] === points}\n                                required\n                            />\n                            <label\n                                htmlFor={`points-${answer.letter}-${points}`}\n                                className=\"choice-label\"\n                                data-points={point}\n                            ></label>\n                        </>)\n                    })}\n                    <div className=\"points-pos\" id={`points-pos-${answer.letter}`}></div>\n                </div>\n            </div>\n\n            ))}\n\n                {tieBreak.length > 0 && tieBreak.map((q, index) => {\n                    \n                return (\n                    <div id=\"tie-break\" key={index} ref={index === currentTieBreakQuestion ? activeElementRef : null}>\n                    <p>{tieBreakerQuestions[q].question}</p>\n                    \n                    {tieBreakerQuestions[q].answers.map((a, idx) => (\n                        <div class=\"tie-break-control\">\n                            <input \n                            type=\"radio\" \n                            name={`radio-${q}`} \n                            id={`radio-${q}-${a.letter}`}\n                            value={a.letter}\n                            onChange={() => tieBreakChange(q, a.letter)}\n                            /> \n                            <label className=\"tie-break-lbl\" key={idx} htmlFor={`radio-${q}-${a.letter}`} >{a.text}</label>\n                        </div>\n                        \n                ))}\n                    </div>\n                );\n                })}\n\n                {showResultContainer && \n                    <div>\n                        rezultatas\n                    </div>\n\n                }\n            \n\n\n            <button\n                type=\"button\"\n                id=\"next-question-button\"\n                className={`next-question-button ${quizData[currentQuestion] && currentVariant + 1 >= quizData[currentQuestion].answers.length ? '' : 'hidden'}`}\n                onClick={handleNextQuestion}\n            >\n                Next Question\n            </button>\n            <button\n                type=\"button\"\n                id=\"show-answer-button\"\n                className={`show-answer-button ${!quizData[currentQuestion] ? '' : 'hidden'}`}\n                onClick={showResult}\n            >\n                show answer\n            </button>\n            <button\n                type=\"button\"\n                id=\"send-email-button\"\n                className={`send-email-button ${false ? '' : 'hidden'}`}\n                onClick={sendEmail}\n            >\n                send email\n            </button>\n        </>\n    );\n};\n\n\n\n\nconst question = `<div class=\"qa\">\n                    <div class=\"question-container\">\n                        <h1 class=\"question\">klausimo tekstas</h1>\n                    </div>\n\n                        <div class=\"variant\" id=\"variant-<?php echo esc_attr($letter); ?>\">\n                            <p style=\"text-align: center;\" data-dichotomy=\"<?php echo esc_attr($letter); ?>\">\n                                <?php echo esc_html($text); ?>\n                            </p>\n                            <div class=\"choice-slider\">\n                                <?php\n                                foreach ($points as $i => $value) {\n                                    $i += 1; // Increment for unique input id\n                                ?>\n                                    <input type=\"radio\" class=\"choice-input\" name=\"points-<?php echo esc_attr($key); ?>\" id=\"points-<?php echo esc_attr($key); ?>-<?php echo esc_attr($i); ?>\" value=\"<?php echo esc_attr($i); ?>\" required>\n                                    <label for=\"points-<?php echo esc_attr($key); ?>-<?php echo esc_attr($i); ?>\" class=\"choice-label\" data-points=\"<?php echo esc_attr($value); ?>\"></label>\n                                <?php } ?>\n                                <div class=\"points-pos\" id=\"points-pos-<?php echo esc_attr($key); ?>\"></div>\n                            </div>\n                        </div>\n                    <?php } ?>\n                    <button type=\"button\" class=\"next-question-button\" style=\"display:none;\">Next Question</button>\n                    </div>`;\n\n\n// document.addEventListener('DOMContentLoaded', function () {\n//     const allQuestions = document.querySelectorAll('.qa');\n//     let currentQuestionIndex = 0;\n//     let currentVariantIndex = 0;\n\n\n\n//     // Enable scrolling through variants\n//     document.querySelectorAll('.choice-input').forEach((input, index) => {\n//         input.addEventListener('click', function () {\n//             currentVariantIndex++;\n//             // Check if it is the last variant in the current question\n//             if (currentVariantIndex < currentVariants.length) {\n//                 // Scroll to the next variant\n//                 currentVariants[currentVariantIndex].scrollIntoView({ behavior: 'smooth', block: 'center' });\n//             } else {\n//                 // Enable the \"Next Question\" button\n//                 const nextButton = allQuestions[currentQuestionIndex].querySelector('.next-question-button');\n//                 nextButton.style.display = 'inline-block';\n//                 nextButton.addEventListener('click', function () {\n//                     // Hide current question\n//                     allQuestions[currentQuestionIndex].classList.remove('qa-active');\n//                     allQuestions[currentQuestionIndex].classList.add('qa-hidden');\n                    \n//                     // Show next question\n//                     currentQuestionIndex++;\n//                     if (currentQuestionIndex < allQuestions.length) {\n//                         allQuestions[currentQuestionIndex].classList.remove('qa-hidden');\n//                         allQuestions[currentQuestionIndex].classList.add('qa-active');\n//                         currentVariantIndex = 0; // Reset variant index for the new question\n//                         const nextVariants = allQuestions[currentQuestionIndex].querySelectorAll('.variant');\n//                         nextVariants[currentVariantIndex].scrollIntoView({ behavior: 'smooth', block: 'center' });\n//                     } else {\n//                         // If no more questions, show submit button\n//                         document.querySelector('.submit-button').style.display = 'inline-block';\n//                     }\n//                 });\n//             }\n//         });\n//     });\n// });\n"],"names":["React","useState","useEffect","useRef","createRoot","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","document","addEventListener","renderForm","quizDiv","getElementById","getElementsByClassName","root","render","QuizRender","quizData","question","answers","text","letter","points","tieBreakerQuestions","currentQuestion","setCurrentQuestion","currentVariant","setCurrentVariant","selectedAnswers","setSelectedAnswers","dichotomy","setDichotomy","tieBreak","setTieBreak","currentTieBreakQuestion","setCurrentTieBreakQuestion","showResultContainer","setShowResultContainer","handleChange","answerLetter","variantIndex","prevAnswers","sum","prevVariant","length","tieBreakChange","questionIndex","prevDichotomy","updatedDichotomy","activeElementRef","current","scrollIntoView","behavior","block","handleNextQuestion","updatedAnswers","Object","keys","forEach","pairs","key1","key2","index","prevTieBreak","console","log","showResult","sendEmail","children","map","answer","answerIndex","className","id","ref","style","textAlign","point","pointIndex","type","name","value","onChange","checked","required","htmlFor","q","a","idx","class","onClick"],"sourceRoot":""}